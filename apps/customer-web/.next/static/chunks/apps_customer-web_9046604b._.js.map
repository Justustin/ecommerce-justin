{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/ecommerce/ecommerceMVP/apps/customer-web/lib/api/client.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosError, InternalAxiosRequestConfig } from 'axios';\r\n\r\n// ============================================================================\r\n// API CLIENT CONFIGURATION\r\n// ============================================================================\r\n\r\n/**\r\n * Base API URL from environment variables\r\n * Development: http://localhost:3002 (assuming product-service runs on 3002)\r\n * Production: https://api.batikbeli.com\r\n */\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3002';\r\n\r\n/**\r\n * Create Axios instance with default configuration\r\n */\r\nconst apiClient: AxiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000, // 30 seconds timeout\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n});\r\n\r\n// ============================================================================\r\n// REQUEST INTERCEPTOR - Attach JWT token to every request\r\n// ============================================================================\r\n\r\n/**\r\n * Before every request, attach the JWT token from localStorage\r\n * This is where we integrate with Zustand auth store\r\n */\r\napiClient.interceptors.request.use(\r\n  (config: InternalAxiosRequestConfig) => {\r\n    // Get token from localStorage (Zustand persists it there)\r\n    // We'll access the auth store directly in the next file\r\n    const authStorage = localStorage.getItem('auth-storage');\r\n    \r\n    if (authStorage) {\r\n      try {\r\n        const { state } = JSON.parse(authStorage);\r\n        const token = state?.token;\r\n        \r\n        if (token && config.headers) {\r\n          // Attach JWT token to Authorization header\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing auth storage:', error);\r\n      }\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ============================================================================\r\n// RESPONSE INTERCEPTOR - Handle errors globally\r\n// ============================================================================\r\n\r\n/**\r\n * Handle API responses and errors consistently\r\n */\r\napiClient.interceptors.response.use(\r\n  // Success responses pass through\r\n  (response) => {\r\n    return response;\r\n  },\r\n  \r\n  // Error handling\r\n  async (error: AxiosError) => {\r\n    const originalRequest = error.config as InternalAxiosRequestConfig & { _retry?: boolean };\r\n    \r\n    // Handle different error scenarios\r\n    if (error.response) {\r\n      // Server responded with error status\r\n      const status = error.response.status;\r\n      \r\n      switch (status) {\r\n        case 401: {\r\n          // Unauthorized - token expired or invalid\r\n          \r\n          // Avoid infinite retry loop\r\n          if (originalRequest._retry) {\r\n            // Already tried to refresh, redirect to login\r\n            if (typeof window !== 'undefined') {\r\n              localStorage.removeItem('auth-storage');\r\n              window.location.href = '/login?session_expired=true';\r\n            }\r\n            return Promise.reject(error);\r\n          }\r\n          \r\n          originalRequest._retry = true;\r\n          \r\n          // TODO: Implement token refresh logic here\r\n          // For MVP, we'll just redirect to login\r\n          // In Phase 2, implement refresh token flow:\r\n          // 1. Call /auth/refresh endpoint\r\n          // 2. Get new access token\r\n          // 3. Update auth store\r\n          // 4. Retry original request\r\n          \r\n          if (typeof window !== 'undefined') {\r\n            localStorage.removeItem('auth-storage');\r\n            window.location.href = '/login?session_expired=true';\r\n          }\r\n          \r\n          return Promise.reject(error);\r\n        }\r\n        \r\n        case 403: {\r\n          // Forbidden - user doesn't have permission\r\n          console.error('Access forbidden:', error.response.data);\r\n          return Promise.reject({\r\n            message: 'Anda tidak memiliki akses untuk melakukan ini',\r\n            status: 403,\r\n            data: error.response.data,\r\n          });\r\n        }\r\n        \r\n        case 404: {\r\n          // Not found\r\n          return Promise.reject({\r\n            message: 'Data tidak ditemukan',\r\n            status: 404,\r\n            data: error.response.data,\r\n          });\r\n        }\r\n        \r\n        case 422: {\r\n          // Validation error\r\n          return Promise.reject({\r\n            message: 'Data yang Anda masukkan tidak valid',\r\n            status: 422,\r\n            data: error.response.data,\r\n            errors: (error.response.data as any)?.errors, // Field-level errors\r\n          });\r\n        }\r\n        \r\n        case 429: {\r\n          // Rate limit exceeded\r\n          return Promise.reject({\r\n            message: 'Terlalu banyak permintaan. Silakan coba lagi nanti',\r\n            status: 429,\r\n            data: error.response.data,\r\n          });\r\n        }\r\n        \r\n        case 500:\r\n        case 502:\r\n        case 503:\r\n        case 504: {\r\n          // Server errors\r\n          return Promise.reject({\r\n            message: 'Terjadi kesalahan pada server. Silakan coba lagi',\r\n            status: status,\r\n            data: error.response.data,\r\n          });\r\n        }\r\n        \r\n        default: {\r\n          // Other errors\r\n          return Promise.reject({\r\n            message: (error.response.data as any)?.message || 'Terjadi kesalahan',\r\n            status: status,\r\n            data: error.response.data,\r\n          });\r\n        }\r\n      }\r\n    } else if (error.request) {\r\n      // Request was made but no response received\r\n      // Network error, timeout, or CORS issue\r\n      console.error('Network error:', error.request);\r\n      return Promise.reject({\r\n        message: 'Tidak dapat terhubung ke server. Periksa koneksi internet Anda',\r\n        status: 0,\r\n        networkError: true,\r\n      });\r\n    } else {\r\n      // Something else happened\r\n      console.error('Request setup error:', error.message);\r\n      return Promise.reject({\r\n        message: error.message || 'Terjadi kesalahan',\r\n        status: 0,\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n// ============================================================================\r\n// UTILITY FUNCTIONS\r\n// ============================================================================\r\n\r\n/**\r\n * Check if error is a network error (no internet connection)\r\n */\r\nexport const isNetworkError = (error: any): boolean => {\r\n  return error?.networkError === true || error?.status === 0;\r\n};\r\n\r\n/**\r\n * Check if error is an authentication error (401/403)\r\n */\r\nexport const isAuthError = (error: any): boolean => {\r\n  return error?.status === 401 || error?.status === 403;\r\n};\r\n\r\n/**\r\n * Check if error is a validation error (422)\r\n */\r\nexport const isValidationError = (error: any): boolean => {\r\n  return error?.status === 422;\r\n};\r\n\r\n/**\r\n * Extract error message from API error response\r\n * Handles different error response formats\r\n */\r\nexport const getErrorMessage = (error: any): string => {\r\n  if (typeof error === 'string') {\r\n    return error;\r\n  }\r\n  \r\n  if (error?.message) {\r\n    return error.message;\r\n  }\r\n  \r\n  if (error?.data?.message) {\r\n    return error.data.message;\r\n  }\r\n  \r\n  if (error?.response?.data?.message) {\r\n    return error.response.data.message;\r\n  }\r\n  \r\n  return 'Terjadi kesalahan. Silakan coba lagi';\r\n};\r\n\r\n/**\r\n * Extract field-level validation errors (for form validation)\r\n * Returns object like: { phone_number: ['Nomor telepon sudah terdaftar'], ... }\r\n */\r\nexport const getValidationErrors = (error: any): Record<string, string[]> | null => {\r\n  if (!isValidationError(error)) {\r\n    return null;\r\n  }\r\n  \r\n  return error?.errors || error?.data?.errors || null;\r\n};\r\n\r\n// ============================================================================\r\n// EXPORT\r\n// ============================================================================\r\n\r\n/**\r\n * Configured Axios instance ready to use\r\n * All requests through this client will:\r\n * - Include JWT token automatically\r\n * - Handle errors consistently\r\n * - Use Indonesian error messages\r\n * - Retry/refresh tokens on 401\r\n */\r\nexport default apiClient;\r\n\r\n/**\r\n * Re-export AxiosError type for convenience\r\n */\r\nexport type { AxiosError };\r\n\r\n// ============================================================================\r\n// USAGE EXAMPLES\r\n// ============================================================================\r\n\r\n/**\r\n * Example 1: Simple GET request\r\n * \r\n * import apiClient from '@/lib/api/client';\r\n * \r\n * const response = await apiClient.get('/products');\r\n * const products = response.data;\r\n */\r\n\r\n/**\r\n * Example 2: POST request with data\r\n * \r\n * import apiClient from '@/lib/api/client';\r\n * \r\n * const response = await apiClient.post('/orders', {\r\n *   product_id: '123',\r\n *   quantity: 2\r\n * });\r\n */\r\n\r\n/**\r\n * Example 3: Error handling\r\n * \r\n * import apiClient, { getErrorMessage, isValidationError } from '@/lib/api/client';\r\n * \r\n * try {\r\n *   await apiClient.post('/auth/register', formData);\r\n * } catch (error) {\r\n *   if (isValidationError(error)) {\r\n *     // Show field-level errors\r\n *     const errors = getValidationErrors(error);\r\n *     console.log(errors); // { phone_number: ['Already registered'] }\r\n *   } else {\r\n *     // Show general error message\r\n *     const message = getErrorMessage(error);\r\n *     toast.error(message);\r\n *   }\r\n * }\r\n */\r\n\r\n/**\r\n * Example 4: Using with React Query\r\n * \r\n * import { useQuery } from '@tanstack/react-query';\r\n * import apiClient from '@/lib/api/client';\r\n * \r\n * const { data, isLoading } = useQuery({\r\n *   queryKey: ['products'],\r\n *   queryFn: async () => {\r\n *     const response = await apiClient.get('/products');\r\n *     return response.data;\r\n *   }\r\n * });\r\n */"],"names":[],"mappings":";;;;;;;;;;;;;;AAWqB;AAXrB;;AAEA,+EAA+E;AAC/E,2BAA2B;AAC3B,+EAA+E;AAE/E;;;;CAIC,GACD,MAAM,eAAe,6DAAmC;AAExD;;CAEC,GACD,MAAM,YAA2B,sMAAK,CAAC,MAAM,CAAC;IAC5C,SAAS;IACT,SAAS;IACT,SAAS;QACP,gBAAgB;QAChB,UAAU;IACZ;AACF;AAEA,+EAA+E;AAC/E,0DAA0D;AAC1D,+EAA+E;AAE/E;;;CAGC,GACD,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,CAAC;IACC,0DAA0D;IAC1D,wDAAwD;IACxD,MAAM,cAAc,aAAa,OAAO,CAAC;IAEzC,IAAI,aAAa;QACf,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,KAAK,CAAC;YAC7B,MAAM,QAAQ,kBAAA,4BAAA,MAAO,KAAK;YAE1B,IAAI,SAAS,OAAO,OAAO,EAAE;gBAC3B,2CAA2C;gBAC3C,OAAO,OAAO,CAAC,aAAa,GAAG,AAAC,UAAe,OAAN;YAC3C;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,+EAA+E;AAC/E,gDAAgD;AAChD,+EAA+E;AAE/E;;CAEC,GACD,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,iCAAiC;AACjC,CAAC;IACC,OAAO;AACT,GAEA,iBAAiB;AACjB,OAAO;IACL,MAAM,kBAAkB,MAAM,MAAM;IAEpC,mCAAmC;IACnC,IAAI,MAAM,QAAQ,EAAE;QAClB,qCAAqC;QACrC,MAAM,SAAS,MAAM,QAAQ,CAAC,MAAM;QAEpC,OAAQ;YACN,KAAK;gBAAK;oBACR,0CAA0C;oBAE1C,4BAA4B;oBAC5B,IAAI,gBAAgB,MAAM,EAAE;wBAC1B,8CAA8C;wBAC9C,wCAAmC;4BACjC,aAAa,UAAU,CAAC;4BACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;wBACzB;wBACA,OAAO,QAAQ,MAAM,CAAC;oBACxB;oBAEA,gBAAgB,MAAM,GAAG;oBAEzB,2CAA2C;oBAC3C,wCAAwC;oBACxC,4CAA4C;oBAC5C,iCAAiC;oBACjC,0BAA0B;oBAC1B,uBAAuB;oBACvB,4BAA4B;oBAE5B,wCAAmC;wBACjC,aAAa,UAAU,CAAC;wBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;oBACzB;oBAEA,OAAO,QAAQ,MAAM,CAAC;gBACxB;YAEA,KAAK;gBAAK;oBACR,2CAA2C;oBAC3C,QAAQ,KAAK,CAAC,qBAAqB,MAAM,QAAQ,CAAC,IAAI;oBACtD,OAAO,QAAQ,MAAM,CAAC;wBACpB,SAAS;wBACT,QAAQ;wBACR,MAAM,MAAM,QAAQ,CAAC,IAAI;oBAC3B;gBACF;YAEA,KAAK;gBAAK;oBACR,YAAY;oBACZ,OAAO,QAAQ,MAAM,CAAC;wBACpB,SAAS;wBACT,QAAQ;wBACR,MAAM,MAAM,QAAQ,CAAC,IAAI;oBAC3B;gBACF;YAEA,KAAK;gBAAK;wBAME;oBALV,mBAAmB;oBACnB,OAAO,QAAQ,MAAM,CAAC;wBACpB,SAAS;wBACT,QAAQ;wBACR,MAAM,MAAM,QAAQ,CAAC,IAAI;wBACzB,MAAM,GAAE,QAAC,MAAM,QAAQ,CAAC,IAAI,cAApB,4BAAA,MAA8B,MAAM;oBAC9C;gBACF;YAEA,KAAK;gBAAK;oBACR,sBAAsB;oBACtB,OAAO,QAAQ,MAAM,CAAC;wBACpB,SAAS;wBACT,QAAQ;wBACR,MAAM,MAAM,QAAQ,CAAC,IAAI;oBAC3B;gBACF;YAEA,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBAAK;oBACR,gBAAgB;oBAChB,OAAO,QAAQ,MAAM,CAAC;wBACpB,SAAS;wBACT,QAAQ;wBACR,MAAM,MAAM,QAAQ,CAAC,IAAI;oBAC3B;gBACF;YAEA;gBAAS;wBAGI;oBAFX,eAAe;oBACf,OAAO,QAAQ,MAAM,CAAC;wBACpB,SAAS,EAAA,SAAC,MAAM,QAAQ,CAAC,IAAI,cAApB,6BAAA,OAA8B,OAAO,KAAI;wBAClD,QAAQ;wBACR,MAAM,MAAM,QAAQ,CAAC,IAAI;oBAC3B;gBACF;QACF;IACF,OAAO,IAAI,MAAM,OAAO,EAAE;QACxB,4CAA4C;QAC5C,wCAAwC;QACxC,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;QAC7C,OAAO,QAAQ,MAAM,CAAC;YACpB,SAAS;YACT,QAAQ;YACR,cAAc;QAChB;IACF,OAAO;QACL,0BAA0B;QAC1B,QAAQ,KAAK,CAAC,wBAAwB,MAAM,OAAO;QACnD,OAAO,QAAQ,MAAM,CAAC;YACpB,SAAS,MAAM,OAAO,IAAI;YAC1B,QAAQ;QACV;IACF;AACF;AAUK,MAAM,iBAAiB,CAAC;IAC7B,OAAO,CAAA,kBAAA,4BAAA,MAAO,YAAY,MAAK,QAAQ,CAAA,kBAAA,4BAAA,MAAO,MAAM,MAAK;AAC3D;AAKO,MAAM,cAAc,CAAC;IAC1B,OAAO,CAAA,kBAAA,4BAAA,MAAO,MAAM,MAAK,OAAO,CAAA,kBAAA,4BAAA,MAAO,MAAM,MAAK;AACpD;AAKO,MAAM,oBAAoB,CAAC;IAChC,OAAO,CAAA,kBAAA,4BAAA,MAAO,MAAM,MAAK;AAC3B;AAMO,MAAM,kBAAkB,CAAC;QAS1B,aAIA,sBAAA;IAZJ,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,IAAI,kBAAA,4BAAA,MAAO,OAAO,EAAE;QAClB,OAAO,MAAM,OAAO;IACtB;IAEA,IAAI,kBAAA,6BAAA,cAAA,MAAO,IAAI,cAAX,kCAAA,YAAa,OAAO,EAAE;QACxB,OAAO,MAAM,IAAI,CAAC,OAAO;IAC3B;IAEA,IAAI,kBAAA,6BAAA,kBAAA,MAAO,QAAQ,cAAf,uCAAA,uBAAA,gBAAiB,IAAI,cAArB,2CAAA,qBAAuB,OAAO,EAAE;QAClC,OAAO,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;IACpC;IAEA,OAAO;AACT;AAMO,MAAM,sBAAsB,CAAC;QAKV;IAJxB,IAAI,CAAC,kBAAkB,QAAQ;QAC7B,OAAO;IACT;IAEA,OAAO,CAAA,kBAAA,4BAAA,MAAO,MAAM,MAAI,kBAAA,6BAAA,cAAA,MAAO,IAAI,cAAX,kCAAA,YAAa,MAAM,KAAI;AACjD;uCAce;;;;CAOf,+EAA+E;CAC/E,iBAAiB;CACjB,+EAA+E;CAE/E;;;;;;;CAOC,IAED;;;;;;;;;CASC,IAED;;;;;;;;;;;;;;;;;;CAkBC,IAED;;;;;;;;;;;;;CAaC","debugId":null}},
    {"offset": {"line": 273, "column": 4}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///C:/ecommerce/ecommerceMVP/apps/customer-web/lib/api/products.ts"],"sourcesContent":["import apiClient from './client';\r\nimport type {\r\n  Product,\r\n  Category,\r\n  ProductFilters,\r\n  PaginatedResponse,\r\n  ApiResponse,\r\n  GroupBuyingSession,\r\n  JoinGroupFormData,\r\n  ProductReview,\r\n} from '@/types';\r\n\r\n// ============================================================================\r\n// PRODUCT ENDPOINTS\r\n// ============================================================================\r\n\r\n/**\r\n * Get list of products with optional filters\r\n * Supports pagination, search, category filter, price range, etc.\r\n * \r\n * @param filters - ProductFilters object\r\n * @returns Paginated list of products\r\n */\r\nexport const getProducts = async (\r\n  filters: ProductFilters = {}\r\n): Promise<PaginatedResponse<Product>> => {\r\n  const params = new URLSearchParams();\r\n  \r\n  // Add filters to query params\r\n  if (filters.category_id) params.append('category_id', filters.category_id);\r\n  if (filters.min_price) params.append('min_price', filters.min_price.toString());\r\n  if (filters.max_price) params.append('max_price', filters.max_price.toString());\r\n  if (filters.status) params.append('status', filters.status);\r\n  if (filters.factory_id) params.append('factory_id', filters.factory_id);\r\n  if (filters.has_active_group !== undefined) {\r\n    params.append('has_active_group', filters.has_active_group.toString());\r\n  }\r\n  if (filters.search) params.append('search', filters.search);\r\n  if (filters.sort_by) params.append('sort_by', filters.sort_by);\r\n  \r\n  // Pagination\r\n  params.append('page', (filters.page || 1).toString());\r\n  params.append('limit', (filters.limit || 20).toString());\r\n  \r\n  const response = await apiClient.get(`/products?${params.toString()}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Get single product by ID\r\n * Includes all relations: category, factory, images, variants, active_session, reviews\r\n * \r\n * @param id - Product UUID\r\n * @returns Product with full details\r\n */\r\nexport const getProductById = async (id: string): Promise<ApiResponse<Product>> => {\r\n  const response = await apiClient.get(`/products/${id}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Get single product by slug (for SEO-friendly URLs)\r\n * Example: /products/batik-tulis-pekalongan-merah\r\n * \r\n * @param slug - Product URL slug\r\n * @returns Product with full details\r\n */\r\nexport const getProductBySlug = async (slug: string): Promise<ApiResponse<Product>> => {\r\n  const response = await apiClient.get(`/products/slug/${slug}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Search products by name or description\r\n * Full-text search implementation\r\n * \r\n * @param query - Search query string\r\n * @param page - Page number (default: 1)\r\n * @param limit - Items per page (default: 20)\r\n * @returns Paginated search results\r\n */\r\nexport const searchProducts = async (\r\n  query: string,\r\n  page: number = 1,\r\n  limit: number = 20\r\n): Promise<PaginatedResponse<Product>> => {\r\n  return getProducts({ search: query, page, limit });\r\n};\r\n\r\n/**\r\n * Get products from a specific factory\r\n * Useful for \"More from this factory\" sections\r\n * \r\n * @param factoryId - Factory UUID\r\n * @param page - Page number\r\n * @param limit - Items per page\r\n * @returns Paginated list of products\r\n */\r\nexport const getProductsByFactory = async (\r\n  factoryId: string,\r\n  page: number = 1,\r\n  limit: number = 20\r\n): Promise<PaginatedResponse<Product>> => {\r\n  return getProducts({ factory_id: factoryId, page, limit });\r\n};\r\n\r\n/**\r\n * Get featured/trending products for homepage\r\n * Products with active group buying sessions, sorted by popularity\r\n * \r\n * @param limit - Number of products to return (default: 10)\r\n * @returns List of featured products\r\n */\r\nexport const getFeaturedProducts = async (\r\n  limit: number = 10\r\n): Promise<ApiResponse<Product[]>> => {\r\n  const response = await apiClient.get(`/products/featured?limit=${limit}`);\r\n  return response.data;\r\n};\r\n\r\n// ============================================================================\r\n// CATEGORY ENDPOINTS\r\n// ============================================================================\r\n\r\n/**\r\n * Get all product categories\r\n * Returns hierarchical structure (parent and child categories)\r\n * \r\n * @returns List of categories\r\n */\r\nexport const getCategories = async (): Promise<ApiResponse<Category[]>> => {\r\n  const response = await apiClient.get('/categories');\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Get single category by ID\r\n * \r\n * @param id - Category UUID\r\n * @returns Category details\r\n */\r\nexport const getCategoryById = async (id: string): Promise<ApiResponse<Category>> => {\r\n  const response = await apiClient.get(`/categories/${id}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Get category by slug\r\n * Example: /categories/batik-tulis\r\n * \r\n * @param slug - Category slug\r\n * @returns Category details\r\n */\r\nexport const getCategoryBySlug = async (slug: string): Promise<ApiResponse<Category>> => {\r\n  const response = await apiClient.get(`/categories/slug/${slug}`);\r\n  return response.data;\r\n};\r\n\r\n// ============================================================================\r\n// GROUP BUYING SESSION ENDPOINTS\r\n// ============================================================================\r\n\r\n/**\r\n * Get active group buying session for a product\r\n * Returns null if no active session exists\r\n * \r\n * @param productId - Product UUID\r\n * @returns Active group buying session or null\r\n */\r\nexport const getActiveGroupSession = async (\r\n  productId: string\r\n): Promise<ApiResponse<GroupBuyingSession | null>> => {\r\n  const response = await apiClient.get(`/products/${productId}/active-session`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Get group buying session details by ID\r\n * Includes participants list and progress\r\n * \r\n * @param sessionId - Session UUID\r\n * @returns Group buying session with participants\r\n */\r\nexport const getGroupSessionById = async (\r\n  sessionId: string\r\n): Promise<ApiResponse<GroupBuyingSession>> => {\r\n  const response = await apiClient.get(`/group-sessions/${sessionId}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Join a group buying session\r\n * Creates a group participant entry and reserves stock\r\n * \r\n * @param sessionId - Session UUID\r\n * @param data - Join group form data (quantity, variant)\r\n * @returns Updated group session with participant info\r\n */\r\nexport const joinGroupSession = async (\r\n  sessionId: string,\r\n  data: JoinGroupFormData\r\n): Promise<ApiResponse<GroupBuyingSession>> => {\r\n  const response = await apiClient.post(`/group-sessions/${sessionId}/join`, {\r\n    quantity: data.quantity,\r\n    variant_id: data.variant_id,\r\n  });\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Leave a group buying session (before payment)\r\n * Only allowed if order hasn't been paid yet\r\n * \r\n * @param sessionId - Session UUID\r\n * @returns Success response\r\n */\r\nexport const leaveGroupSession = async (\r\n  sessionId: string\r\n): Promise<ApiResponse<void>> => {\r\n  const response = await apiClient.post(`/group-sessions/${sessionId}/leave`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Get all active group buying sessions\r\n * For \"Join a Group\" or \"Active Groups\" page\r\n * \r\n * @param page - Page number\r\n * @param limit - Items per page\r\n * @returns Paginated list of active group sessions\r\n */\r\nexport const getActiveGroupSessions = async (\r\n  page: number = 1,\r\n  limit: number = 20\r\n): Promise<PaginatedResponse<GroupBuyingSession>> => {\r\n  const params = new URLSearchParams({\r\n    page: page.toString(),\r\n    limit: limit.toString(),\r\n  });\r\n  \r\n  const response = await apiClient.get(`/group-sessions/active?${params.toString()}`);\r\n  return response.data;\r\n};\r\n\r\n// ============================================================================\r\n// PRODUCT REVIEW ENDPOINTS\r\n// ============================================================================\r\n\r\n/**\r\n * Get reviews for a product\r\n * \r\n * @param productId - Product UUID\r\n * @param page - Page number\r\n * @param limit - Items per page\r\n * @returns Paginated list of reviews\r\n */\r\nexport const getProductReviews = async (\r\n  productId: string,\r\n  page: number = 1,\r\n  limit: number = 10\r\n): Promise<PaginatedResponse<ProductReview>> => {\r\n  const params = new URLSearchParams({\r\n    page: page.toString(),\r\n    limit: limit.toString(),\r\n  });\r\n  \r\n  const response = await apiClient.get(`/products/${productId}/reviews?${params.toString()}`);\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Submit a product review\r\n * Only allowed after order is delivered\r\n * \r\n * @param orderItemId - Order item UUID\r\n * @param data - Review data (rating, comment, photos)\r\n * @returns Created review\r\n */\r\nexport const submitProductReview = async (\r\n  orderItemId: string,\r\n  data: FormData\r\n): Promise<ApiResponse<ProductReview>> => {\r\n  // Use FormData for file uploads (photos/videos)\r\n  const response = await apiClient.post(`/reviews/product/${orderItemId}`, data, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// ============================================================================\r\n// UTILITY FUNCTIONS\r\n// ============================================================================\r\n\r\n/**\r\n * Calculate time remaining for a group buying session\r\n * Returns formatted string like \"3j 45m\" or \"EXPIRED\"\r\n * \r\n * @param endTime - Session end time (ISO string)\r\n * @returns Formatted time remaining\r\n */\r\nexport const calculateTimeRemaining = (endTime: string): string => {\r\n  const now = new Date().getTime();\r\n  const end = new Date(endTime).getTime();\r\n  const diff = end - now;\r\n  \r\n  if (diff <= 0) {\r\n    return 'EXPIRED';\r\n  }\r\n  \r\n  const hours = Math.floor(diff / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n  \r\n  if (hours > 24) {\r\n    const days = Math.floor(hours / 24);\r\n    return `${days}h ${hours % 24}j`;\r\n  }\r\n  \r\n  return `${hours}j ${minutes}m`;\r\n};\r\n\r\n/**\r\n * Calculate group buying progress percentage\r\n * \r\n * @param currentQuantity - Current number of participants\r\n * @param targetMoq - Minimum order quantity target\r\n * @returns Percentage (0-100)\r\n */\r\nexport const calculateProgress = (\r\n  currentQuantity: number,\r\n  targetMoq: number\r\n): number => {\r\n  return Math.min(Math.round((currentQuantity / targetMoq) * 100), 100);\r\n};\r\n\r\n/**\r\n * Check if a group buying session is still open for joining\r\n * \r\n * @param session - Group buying session\r\n * @returns true if can still join\r\n */\r\nexport const canJoinSession = (session: GroupBuyingSession): boolean => {\r\n  const now = new Date().getTime();\r\n  const end = new Date(session.end_time).getTime();\r\n  \r\n  return (\r\n    session.status === 'forming' &&\r\n    now < end &&\r\n    (session.current_quantity || 0) < session.target_moq\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// EXPORT ALL\r\n// ============================================================================\r\n\r\nexport default {\r\n  // Products\r\n  getProducts,\r\n  getProductById,\r\n  getProductBySlug,\r\n  searchProducts,\r\n  getProductsByFactory,\r\n  getFeaturedProducts,\r\n  \r\n  // Categories\r\n  getCategories,\r\n  getCategoryById,\r\n  getCategoryBySlug,\r\n  \r\n  // Group Buying\r\n  getActiveGroupSession,\r\n  getGroupSessionById,\r\n  joinGroupSession,\r\n  leaveGroupSession,\r\n  getActiveGroupSessions,\r\n  \r\n  // Reviews\r\n  getProductReviews,\r\n  submitProductReview,\r\n  \r\n  // Utilities\r\n  calculateTimeRemaining,\r\n  calculateProgress,\r\n  canJoinSession,\r\n};\r\n\r\n// ============================================================================\r\n// USAGE EXAMPLES\r\n// ============================================================================\r\n\r\n/**\r\n * Example 1: Fetch products for homepage with React Query\r\n * \r\n * import { useQuery } from '@tanstack/react-query';\r\n * import { getProducts } from '@/lib/api/products';\r\n * \r\n * const { data, isLoading } = useQuery({\r\n *   queryKey: ['products', { has_active_group: true }],\r\n *   queryFn: () => getProducts({ has_active_group: true, limit: 12 })\r\n * });\r\n */\r\n\r\n/**\r\n * Example 2: Join a group buying session with mutation\r\n * \r\n * import { useMutation } from '@tanstack/react-query';\r\n * import { joinGroupSession } from '@/lib/api/products';\r\n * \r\n * const { mutate, isPending } = useMutation({\r\n *   mutationFn: (data: JoinGroupFormData) => \r\n *     joinGroupSession(data.session_id, data),\r\n *   onSuccess: () => {\r\n *     toast.success('Berhasil bergabung dengan grup!');\r\n *     router.push('/checkout');\r\n *   }\r\n * });\r\n */\r\n\r\n/**\r\n * Example 3: Search products with debouncing\r\n * \r\n * import { useQuery } from '@tanstack/react-query';\r\n * import { searchProducts } from '@/lib/api/products';\r\n * import { useState, useEffect } from 'react';\r\n * \r\n * const [searchQuery, setSearchQuery] = useState('');\r\n * const [debouncedQuery, setDebouncedQuery] = useState('');\r\n * \r\n * useEffect(() => {\r\n *   const timer = setTimeout(() => setDebouncedQuery(searchQuery), 500);\r\n *   return () => clearTimeout(timer);\r\n * }, [searchQuery]);\r\n * \r\n * const { data } = useQuery({\r\n *   queryKey: ['products', 'search', debouncedQuery],\r\n *   queryFn: () => searchProducts(debouncedQuery),\r\n *   enabled: debouncedQuery.length > 2\r\n * });\r\n */"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 527, "column": 4}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///C:/ecommerce/ecommerceMVP/apps/customer-web/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { cn } from '../../lib/utils';\r\n\r\n// ============================================================================\r\n// BASE CARD COMPONENTS - Pinduoduo-inspired design\r\n// ============================================================================\r\n\r\n/**\r\n * Card - Base container with shadow and rounded corners\r\n */\r\nexport const Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      'rounded-2xl bg-white shadow-md hover:shadow-xl transition-shadow duration-300',\r\n      'border border-gray-100',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = 'Card';\r\n\r\n/**\r\n * CardHeader - Top section of card\r\n */\r\nexport const CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('p-4 pb-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardHeader.displayName = 'CardHeader';\r\n\r\n/**\r\n * CardContent - Main content area\r\n */\r\nexport const CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('p-4', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardContent.displayName = 'CardContent';\r\n\r\n/**\r\n * CardFooter - Bottom section of card\r\n */\r\nexport const CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('p-4 pt-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = 'CardFooter';\r\n\r\n// ============================================================================\r\n// PINDUODUO-STYLE BADGES & TAGS\r\n// ============================================================================\r\n\r\n/**\r\n * Badge - Colorful label for product features\r\n */\r\nexport const Badge = React.forwardRef<\r\n  HTMLSpanElement,\r\n  React.HTMLAttributes<HTMLSpanElement> & {\r\n    variant?: 'hot' | 'new' | 'sale' | 'group' | 'moq' | 'default';\r\n  }\r\n>(({ className, variant = 'default', ...props }, ref) => {\r\n  const variantStyles = {\r\n    hot: 'bg-gradient-to-r from-red-500 to-orange-500 text-white',\r\n    new: 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white',\r\n    sale: 'bg-gradient-to-r from-green-500 to-emerald-500 text-white',\r\n    group: 'bg-gradient-to-r from-purple-500 to-pink-500 text-white',\r\n    moq: 'bg-gradient-to-r from-yellow-400 to-orange-400 text-gray-900',\r\n    default: 'bg-gray-100 text-gray-700',\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className={cn(\r\n        'inline-flex items-center px-2.5 py-1 rounded-full text-xs font-bold',\r\n        'shadow-sm',\r\n        variantStyles[variant],\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nBadge.displayName = 'Badge';\r\n\r\n/**\r\n * DiscountBadge - Shows discount percentage\r\n */\r\nexport const DiscountBadge: React.FC<{ percent: number }> = ({ percent }) => (\r\n  <div className=\"absolute top-3 right-3 z-10\">\r\n    <div className=\"relative\">\r\n      <div className=\"bg-gradient-to-br from-red-500 to-red-600 text-white px-2 py-1 rounded-lg shadow-lg\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-xs font-medium leading-none\">DISKON</div>\r\n          <div className=\"text-lg font-bold leading-tight\">{percent}%</div>\r\n        </div>\r\n      </div>\r\n      {/* Small triangle pointer */}\r\n      <div className=\"absolute -bottom-1 right-2 w-0 h-0 border-l-4 border-l-transparent border-r-4 border-r-transparent border-t-4 border-t-red-600\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// ============================================================================\r\n// PRICE DISPLAY - Pinduoduo-style prominent pricing\r\n// ============================================================================\r\n\r\ninterface PriceDisplayProps {\r\n  price: number;\r\n  originalPrice?: number;\r\n  showRp?: boolean;\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\n/**\r\n * PriceDisplay - Prominent price with optional strikethrough original price\r\n */\r\nexport const PriceDisplay: React.FC<PriceDisplayProps> = ({\r\n  price,\r\n  originalPrice,\r\n  showRp = true,\r\n  size = 'md',\r\n}) => {\r\n  const sizeClasses = {\r\n    sm: 'text-lg',\r\n    md: 'text-2xl',\r\n    lg: 'text-3xl',\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-baseline gap-2\">\r\n      <div className={cn('font-bold text-red-600', sizeClasses[size])}>\r\n        {showRp && <span className=\"text-sm mr-0.5\">Rp</span>}\r\n        {price.toLocaleString('id-ID')}\r\n      </div>\r\n      {originalPrice && originalPrice > price && (\r\n        <div className=\"text-sm text-gray-400 line-through\">\r\n          Rp {originalPrice.toLocaleString('id-ID')}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// GROUP BUYING PROGRESS BAR\r\n// ============================================================================\r\n\r\ninterface GroupProgressProps {\r\n  current: number;\r\n  target: number;\r\n  showLabel?: boolean;\r\n}\r\n\r\n/**\r\n * GroupProgress - Visual progress bar for group buying MOQ\r\n */\r\nexport const GroupProgress: React.FC<GroupProgressProps> = ({\r\n  current,\r\n  target,\r\n  showLabel = true,\r\n}) => {\r\n  const percentage = Math.min((current / target) * 100, 100);\r\n  const remaining = Math.max(target - current, 0);\r\n\r\n  return (\r\n    <div className=\"space-y-1.5\">\r\n      {/* Progress bar */}\r\n      <div className=\"relative h-3 bg-gray-100 rounded-full overflow-hidden\">\r\n        <div\r\n          className=\"absolute inset-y-0 left-0 bg-gradient-to-r from-purple-500 to-pink-500 transition-all duration-500 ease-out\"\r\n          style={{ width: `${percentage}%` }}\r\n        >\r\n          {/* Shimmer effect */}\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-shimmer\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Label */}\r\n      {showLabel && (\r\n        <div className=\"flex items-center justify-between text-xs\">\r\n          <span className=\"text-purple-600 font-semibold\">\r\n            {current} / {target} orang\r\n          </span>\r\n          {remaining > 0 && (\r\n            <span className=\"text-gray-500\">\r\n              Kurang {remaining} orang lagi\r\n            </span>\r\n          )}\r\n          {remaining === 0 && (\r\n            <span className=\"text-green-600 font-semibold\">\r\n              ✓ MOQ Tercapai!\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// COUNTDOWN TIMER\r\n// ============================================================================\r\n\r\ninterface CountdownProps {\r\n  endTime: string;\r\n  variant?: 'default' | 'urgent';\r\n}\r\n\r\n/**\r\n * Countdown - Shows time remaining with urgency styling\r\n */\r\nexport const Countdown: React.FC<CountdownProps> = ({\r\n  endTime,\r\n  variant = 'default',\r\n}) => {\r\n  const [timeLeft, setTimeLeft] = React.useState('');\r\n  const [isUrgent, setIsUrgent] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const calculateTimeLeft = () => {\r\n      const now = new Date().getTime();\r\n      const end = new Date(endTime).getTime();\r\n      const diff = end - now;\r\n\r\n      if (diff <= 0) {\r\n        setTimeLeft('BERAKHIR');\r\n        return;\r\n      }\r\n\r\n      const hours = Math.floor(diff / (1000 * 60 * 60));\r\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((diff % (1000 * 60)) / 1000);\r\n\r\n      // Mark as urgent if less than 3 hours left\r\n      setIsUrgent(hours < 3);\r\n\r\n      if (hours > 24) {\r\n        const days = Math.floor(hours / 24);\r\n        setTimeLeft(`${days}h ${hours % 24}j`);\r\n      } else {\r\n        setTimeLeft(`${hours}j ${minutes}m ${seconds}d`);\r\n      }\r\n    };\r\n\r\n    calculateTimeLeft();\r\n    const interval = setInterval(calculateTimeLeft, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [endTime]);\r\n\r\n  const urgentClass = isUrgent || variant === 'urgent';\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'inline-flex items-center gap-1.5 px-3 py-1.5 rounded-lg text-sm font-semibold',\r\n        urgentClass\r\n          ? 'bg-red-100 text-red-600 animate-pulse'\r\n          : 'bg-orange-100 text-orange-600'\r\n      )}\r\n    >\r\n      <svg\r\n        className=\"w-4 h-4\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth={2}\r\n          d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n        />\r\n      </svg>\r\n      <span>{timeLeft}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// SOCIAL PROOF TAGS\r\n// ============================================================================\r\n\r\n/**\r\n * SocialProof - Shows participant count or reviews\r\n */\r\nexport const SocialProof: React.FC<{\r\n  type: 'participants' | 'reviews' | 'sold';\r\n  count: number;\r\n}> = ({ type, count }) => {\r\n  const config = {\r\n    participants: {\r\n      icon: (\r\n        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n          <path d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\" />\r\n        </svg>\r\n      ),\r\n      label: 'bergabung',\r\n      color: 'text-purple-600 bg-purple-50',\r\n    },\r\n    reviews: {\r\n      icon: (\r\n        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n        </svg>\r\n      ),\r\n      label: 'ulasan',\r\n      color: 'text-yellow-600 bg-yellow-50',\r\n    },\r\n    sold: {\r\n      icon: (\r\n        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      ),\r\n      label: 'terjual',\r\n      color: 'text-green-600 bg-green-50',\r\n    },\r\n  };\r\n\r\n  const { icon, label, color } = config[type];\r\n\r\n  return (\r\n    <div className={cn('inline-flex items-center gap-1 px-2 py-1 rounded-md text-xs font-medium', color)}>\r\n      {icon}\r\n      <span>\r\n        {count.toLocaleString('id-ID')} {label}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// USAGE EXAMPLES\r\n// ============================================================================\r\n\r\n/**\r\n * Example 1: Basic product card\r\n * \r\n * <Card>\r\n *   <CardHeader>\r\n *     <Badge variant=\"hot\">HOT</Badge>\r\n *   </CardHeader>\r\n *   <CardContent>\r\n *     <h3>Batik Tulis Pekalongan</h3>\r\n *     <PriceDisplay price={125000} originalPrice={250000} />\r\n *   </CardContent>\r\n * </Card>\r\n */\r\n\r\n/**\r\n * Example 2: Group buying card with progress\r\n * \r\n * <Card>\r\n *   <DiscountBadge percent={50} />\r\n *   <CardContent>\r\n *     <h3>Batik Cap Premium</h3>\r\n *     <PriceDisplay price={85000} originalPrice={170000} />\r\n *     <GroupProgress current={32} target={50} />\r\n *     <Countdown endTime=\"2025-01-05T15:00:00Z\" />\r\n *     <SocialProof type=\"participants\" count={32} />\r\n *   </CardContent>\r\n * </Card>\r\n */\r\n\r\n/**\r\n * Example 3: Product with badges and social proof\r\n * \r\n * <Card>\r\n *   <CardHeader>\r\n *     <div className=\"flex gap-2\">\r\n *       <Badge variant=\"new\">BARU</Badge>\r\n *       <Badge variant=\"group\">GRUP BELI</Badge>\r\n *     </div>\r\n *   </CardHeader>\r\n *   <CardContent>\r\n *     <h3>Batik Motif Modern</h3>\r\n *     <PriceDisplay price={95000} size=\"lg\" />\r\n *     <div className=\"flex gap-2 mt-2\">\r\n *       <SocialProof type=\"sold\" count={1240} />\r\n *       <SocialProof type=\"reviews\" count={456} />\r\n *     </div>\r\n *   </CardContent>\r\n * </Card>\r\n */"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1066, "column": 0}, "map": {"version":3,"sources":["file:///C:/ecommerce/ecommerceMVP/apps/customer-web/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\n// ============================================================================\r\n// BUTTON VARIANTS - Pinduoduo-inspired design\r\n// ============================================================================\r\n\r\nconst buttonVariants = {\r\n  variant: {\r\n    // Primary: Bold gradient (Pinduoduo's signature red-orange gradient)\r\n    primary: \r\n      'bg-gradient-to-r from-red-500 to-orange-500 text-white shadow-lg ' +\r\n      'hover:from-red-600 hover:to-orange-600 active:scale-95 ' +\r\n      'disabled:from-gray-300 disabled:to-gray-400 disabled:cursor-not-allowed',\r\n    \r\n    // Group: Special gradient for group buying actions (purple-pink for excitement)\r\n    group: \r\n      'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-lg ' +\r\n      'hover:from-purple-600 hover:to-pink-600 active:scale-95 ' +\r\n      'animate-pulse disabled:from-gray-300 disabled:to-gray-400 disabled:animate-none',\r\n    \r\n    // Success: Green gradient for completed actions\r\n    success: \r\n      'bg-gradient-to-r from-green-500 to-emerald-500 text-white shadow-lg ' +\r\n      'hover:from-green-600 hover:to-emerald-600 active:scale-95',\r\n    \r\n    // Secondary: Lighter, less prominent\r\n    secondary: \r\n      'bg-gradient-to-r from-orange-100 to-red-100 text-red-600 border border-red-200 ' +\r\n      'hover:from-orange-200 hover:to-red-200 active:scale-95',\r\n    \r\n    // Outline: Bordered style\r\n    outline: \r\n      'bg-white text-red-500 border-2 border-red-500 ' +\r\n      'hover:bg-red-50 active:scale-95',\r\n    \r\n    // Ghost: Minimal style\r\n    ghost: \r\n      'bg-transparent text-gray-700 hover:bg-gray-100 active:scale-95',\r\n    \r\n    // Link: Text-only style\r\n    link: \r\n      'bg-transparent text-red-500 underline-offset-4 hover:underline',\r\n  },\r\n  \r\n  size: {\r\n    sm: 'h-9 px-4 text-sm rounded-lg',\r\n    md: 'h-11 px-6 text-base rounded-xl',\r\n    lg: 'h-14 px-8 text-lg rounded-2xl font-semibold',\r\n    xl: 'h-16 px-10 text-xl rounded-2xl font-bold', // Extra large for main CTAs\r\n  },\r\n  \r\n  fullWidth: {\r\n    true: 'w-full',\r\n    false: 'w-auto',\r\n  },\r\n};\r\n\r\n// ============================================================================\r\n// BUTTON PROPS INTERFACE\r\n// ============================================================================\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: keyof typeof buttonVariants.variant;\r\n  size?: keyof typeof buttonVariants.size;\r\n  fullWidth?: boolean;\r\n  isLoading?: boolean;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  children: React.ReactNode;\r\n}\r\n\r\n// ============================================================================\r\n// BUTTON COMPONENT\r\n// ============================================================================\r\n\r\n/**\r\n * Pinduoduo-inspired Button Component\r\n * \r\n * Features:\r\n * - Bold gradients for primary actions\r\n * - Special \"group\" variant for group buying\r\n * - Loading states with spinner\r\n * - Icon support (left/right)\r\n * - Scale animation on click\r\n * - Multiple sizes\r\n * - Full width option\r\n * \r\n * @example\r\n * <Button variant=\"primary\" size=\"lg\" fullWidth>\r\n *   Gabung Grup Sekarang!\r\n * </Button>\r\n * \r\n * @example\r\n * <Button variant=\"group\" leftIcon={<UsersIcon />}>\r\n *   32 orang sudah gabung\r\n * </Button>\r\n */\r\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  (\r\n    {\r\n      className,\r\n      variant = 'primary',\r\n      size = 'md',\r\n      fullWidth = false,\r\n      isLoading = false,\r\n      leftIcon,\r\n      rightIcon,\r\n      disabled,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        disabled={disabled || isLoading}\r\n        className={cn(\r\n          // Base styles\r\n          'inline-flex items-center justify-center gap-2',\r\n          'font-medium transition-all duration-200',\r\n          'focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2',\r\n          \r\n          // Variant styles\r\n          buttonVariants.variant[variant],\r\n          \r\n          // Size styles\r\n          buttonVariants.size[size],\r\n          \r\n          // Full width\r\n          fullWidth && buttonVariants.fullWidth.true,\r\n          \r\n          // Custom className\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {/* Loading spinner */}\r\n        {isLoading && (\r\n          <svg\r\n            className=\"animate-spin h-5 w-5\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <circle\r\n              className=\"opacity-25\"\r\n              cx=\"12\"\r\n              cy=\"12\"\r\n              r=\"10\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"4\"\r\n            />\r\n            <path\r\n              className=\"opacity-75\"\r\n              fill=\"currentColor\"\r\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n            />\r\n          </svg>\r\n        )}\r\n        \r\n        {/* Left icon */}\r\n        {!isLoading && leftIcon && (\r\n          <span className=\"flex-shrink-0\">{leftIcon}</span>\r\n        )}\r\n        \r\n        {/* Button text */}\r\n        <span>{children}</span>\r\n        \r\n        {/* Right icon */}\r\n        {rightIcon && (\r\n          <span className=\"flex-shrink-0\">{rightIcon}</span>\r\n        )}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = 'Button';\r\n\r\n// ============================================================================\r\n// SPECIALIZED BUTTON COMPONENTS\r\n// ============================================================================\r\n\r\n/**\r\n * GroupBuyButton - Special button for joining group buying sessions\r\n * Includes participant count and urgency styling\r\n */\r\nexport const GroupBuyButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  Omit<ButtonProps, 'variant'> & { participantCount?: number }\r\n>(({ participantCount, children, ...props }, ref) => {\r\n  return (\r\n    <Button ref={ref} variant=\"group\" {...props}>\r\n      {participantCount !== undefined && (\r\n        <span className=\"bg-white/20 px-2 py-0.5 rounded-full text-xs font-bold\">\r\n          {participantCount} orang\r\n        </span>\r\n      )}\r\n      {children}\r\n    </Button>\r\n  );\r\n});\r\n\r\nGroupBuyButton.displayName = 'GroupBuyButton';\r\n\r\n/**\r\n * AddToCartButton - Specialized button for add to cart actions\r\n */\r\nexport const AddToCartButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  Omit<ButtonProps, 'variant' | 'leftIcon'>\r\n>((props, ref) => {\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      variant=\"primary\"\r\n      leftIcon={\r\n        <svg\r\n          className=\"w-5 h-5\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\r\n          />\r\n        </svg>\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nAddToCartButton.displayName = 'AddToCartButton';\r\n\r\n/**\r\n * CheckoutButton - Large, prominent button for checkout\r\n */\r\nexport const CheckoutButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  Omit<ButtonProps, 'variant' | 'size' | 'fullWidth'>\r\n>((props, ref) => {\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      variant=\"primary\"\r\n      size=\"xl\"\r\n      fullWidth\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nCheckoutButton.displayName = 'CheckoutButton';\r\n\r\n// ============================================================================\r\n// USAGE EXAMPLES\r\n// ============================================================================\r\n\r\n/**\r\n * Example 1: Primary CTA button\r\n * \r\n * <Button variant=\"primary\" size=\"lg\" fullWidth>\r\n *   Daftar Sekarang - Gratis!\r\n * </Button>\r\n */\r\n\r\n/**\r\n * Example 2: Group buying button with participant count\r\n * \r\n * <GroupBuyButton \r\n *   participantCount={32}\r\n *   onClick={handleJoinGroup}\r\n *   isLoading={isJoining}\r\n * >\r\n *   Gabung Grup\r\n * </GroupBuyButton>\r\n */\r\n\r\n/**\r\n * Example 3: Add to cart button\r\n * \r\n * <AddToCartButton\r\n *   onClick={handleAddToCart}\r\n *   isLoading={isAdding}\r\n * >\r\n *   Tambah ke Keranjang\r\n * </AddToCartButton>\r\n */\r\n\r\n/**\r\n * Example 4: Button with icons\r\n * \r\n * <Button \r\n *   variant=\"secondary\"\r\n *   leftIcon={<ShareIcon />}\r\n *   rightIcon={<ChevronRightIcon />}\r\n * >\r\n *   Bagikan ke Teman\r\n * </Button>\r\n */\r\n\r\n/**\r\n * Example 5: Success state button\r\n * \r\n * <Button variant=\"success\" disabled>\r\n *   <CheckIcon className=\"w-5 h-5\" />\r\n *   Sudah Bergabung\r\n * </Button>\r\n */\r\n\r\n/**\r\n * Example 6: Checkout button (specialized)\r\n * \r\n * <CheckoutButton onClick={handleCheckout}>\r\n *   Bayar Sekarang - Rp {total.toLocaleString()}\r\n * </CheckoutButton>\r\n */"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;AAEA,+EAA+E;AAC/E,8CAA8C;AAC9C,+EAA+E;AAE/E,MAAM,iBAAiB;IACrB,SAAS;QACP,qEAAqE;QACrE,SACE,sEACA,4DACA;QAEF,gFAAgF;QAChF,OACE,uEACA,6DACA;QAEF,gDAAgD;QAChD,SACE,yEACA;QAEF,qCAAqC;QACrC,WACE,oFACA;QAEF,0BAA0B;QAC1B,SACE,mDACA;QAEF,uBAAuB;QACvB,OACE;QAEF,wBAAwB;QACxB,MACE;IACJ;IAEA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,WAAW;QACT,MAAM;QACN,OAAO;IACT;AACF;AA0CO,MAAM,uBAAS,0SAAgB,CACpC,QAaE;QAZA,EACE,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,YAAY,KAAK,EACjB,YAAY,KAAK,EACjB,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,GAAG,OACJ;IAGD,qBACE,4TAAC;QACC,KAAK;QACL,UAAU,YAAY;QACtB,WAAW,IAAA,gJAAE,EACX,cAAc;QACd,iDACA,2CACA,0EAEA,iBAAiB;QACjB,eAAe,OAAO,CAAC,QAAQ,EAE/B,cAAc;QACd,eAAe,IAAI,CAAC,KAAK,EAEzB,aAAa;QACb,aAAa,eAAe,SAAS,CAAC,IAAI,EAE1C,mBAAmB;QACnB;QAED,GAAG,KAAK;;YAGR,2BACC,4TAAC;gBACC,WAAU;gBACV,OAAM;gBACN,MAAK;gBACL,SAAQ;;kCAER,4TAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,4TAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAMP,CAAC,aAAa,0BACb,4TAAC;gBAAK,WAAU;0BAAiB;;;;;;0BAInC,4TAAC;0BAAM;;;;;;YAGN,2BACC,4TAAC;gBAAK,WAAU;0BAAiB;;;;;;;;;;;;AAIzC;KA9EW;AAiFb,OAAO,WAAW,GAAG;AAUd,MAAM,+BAAiB,0SAAgB,OAG5C,QAA2C;QAA1C,EAAE,gBAAgB,EAAE,QAAQ,EAAE,GAAG,OAAO;IACzC,qBACE,4TAAC;QAAO,KAAK;QAAK,SAAQ;QAAS,GAAG,KAAK;;YACxC,qBAAqB,2BACpB,4TAAC;gBAAK,WAAU;;oBACb;oBAAiB;;;;;;;YAGrB;;;;;;;AAGP;;AAEA,eAAe,WAAW,GAAG;AAKtB,MAAM,gCAAkB,0SAAgB,OAG7C,CAAC,OAAO;IACR,qBACE,4TAAC;QACC,KAAK;QACL,SAAQ;QACR,wBACE,4TAAC;YACC,WAAU;YACV,MAAK;YACL,QAAO;YACP,SAAQ;sBAER,cAAA,4TAAC;gBACC,eAAc;gBACd,gBAAe;gBACf,aAAa;gBACb,GAAE;;;;;;;;;;;QAIP,GAAG,KAAK;;;;;;AAGf;;AAEA,gBAAgB,WAAW,GAAG;AAKvB,MAAM,+BAAiB,0SAAgB,OAG5C,CAAC,OAAO;IACR,qBACE,4TAAC;QACC,KAAK;QACL,SAAQ;QACR,MAAK;QACL,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;AAEA,eAAe,WAAW,GAAG,kBAE7B,+EAA+E;CAC/E,iBAAiB;CACjB,+EAA+E;CAE/E;;;;;;CAMC,IAED;;;;;;;;;;CAUC,IAED;;;;;;;;;CASC,IAED;;;;;;;;;;CAUC,IAED;;;;;;;CAOC,IAED;;;;;;CAMC","debugId":null}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"sources":["file:///C:/ecommerce/ecommerceMVP/apps/customer-web/components/product/product-card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { cn } from '@/lib/utils';\r\nimport type { Product, GroupBuyingSession } from '@/types';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Badge,\r\n  DiscountBadge,\r\n  PriceDisplay,\r\n  GroupProgress,\r\n  Countdown,\r\n  SocialProof,\r\n} from '@/components/ui/card';\r\nimport { Button, GroupBuyButton, AddToCartButton } from '@/components/ui/button';\r\nimport { useCartActions } from '@/lib/store/cart.store';\r\n\r\n// ============================================================================\r\n// PRODUCT CARD PROPS\r\n// ============================================================================\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n  showGroupBuying?: boolean;\r\n  className?: string;\r\n  onAddToCart?: (product: Product) => void;\r\n  onJoinGroup?: (product: Product, session: GroupBuyingSession) => void;\r\n}\r\n\r\n// ============================================================================\r\n// PRODUCT CARD COMPONENT\r\n// ============================================================================\r\n\r\n/**\r\n * ProductCard - Complete Pinduoduo-style product card\r\n * \r\n * Features:\r\n * - Product image with hover zoom\r\n * - Discount badge\r\n * - Category/feature badges\r\n * - Prominent pricing\r\n * - Group buying progress (if active session)\r\n * - Countdown timer\r\n * - Social proof (participants, reviews, sold count)\r\n * - CTA buttons (Add to Cart or Join Group)\r\n * - Click to product detail page\r\n */\r\nexport const ProductCard: React.FC<ProductCardProps> = ({\r\n  product,\r\n  showGroupBuying = true,\r\n  className,\r\n  onAddToCart,\r\n  onJoinGroup,\r\n}) => {\r\n  const { addItem } = useCartActions();\r\n  const [isImageLoaded, setIsImageLoaded] = React.useState(false);\r\n  const [isAdding, setIsAdding] = React.useState(false);\r\n\r\n  // Get active group buying session\r\n  const activeSession = showGroupBuying ? product.active_session : undefined;\r\n  const hasActiveGroup = !!activeSession;\r\n\r\n  // Calculate discount percentage\r\n  const discountPercent = product.cost_price && product.cost_price > product.base_price\r\n    ? Math.round(((product.cost_price - product.base_price) / product.cost_price) * 100)\r\n    : 0;\r\n\r\n  // Mobile-optimized: smaller, denser card\r\n\r\n  // Handle add to cart\r\n  const handleAddToCart = async (e: React.MouseEvent) => {\r\n    e.preventDefault(); // Prevent navigation\r\n    e.stopPropagation();\r\n    \r\n    setIsAdding(true);\r\n    try {\r\n      if (onAddToCart) {\r\n        onAddToCart(product);\r\n      } else {\r\n        addItem(product, 1, undefined, activeSession);\r\n      }\r\n    } finally {\r\n      setIsAdding(false);\r\n    }\r\n  };\r\n\r\n  // Handle join group\r\n  const handleJoinGroup = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    if (activeSession && onJoinGroup) {\r\n      onJoinGroup(product, activeSession);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link href={`/products/${product.slug}`} className=\"block\">\r\n      <Card className={cn('group cursor-pointer overflow-hidden', className)}>\r\n        {/* Product Image */}\r\n        <div className=\"relative aspect-square overflow-hidden bg-gray-100\">\r\n          {/* Discount Badge */}\r\n          {discountPercent > 0 && <DiscountBadge percent={discountPercent} />}\r\n\r\n          {/* Product Image with zoom effect */}\r\n          <Image\r\n            src={product.primary_image_url || '/placeholder-product.jpg'}\r\n            alt={product.name}\r\n            fill\r\n            className={cn(\r\n              'object-cover transition-all duration-500',\r\n              'group-hover:scale-110',\r\n              isImageLoaded ? 'opacity-100' : 'opacity-0'\r\n            )}\r\n            onLoad={() => setIsImageLoaded(true)}\r\n            sizes=\"(max-width: 768px) 50vw, (max-width: 1200px) 33vw, 25vw\"\r\n          />\r\n\r\n          {/* Loading skeleton */}\r\n          {!isImageLoaded && (\r\n            <div className=\"absolute inset-0 bg-gradient-to-r from-gray-200 via-gray-300 to-gray-200 animate-pulse\" />\r\n          )}\r\n\r\n          {/* Badges overlay at bottom */}\r\n          <div className=\"absolute bottom-3 left-3 flex flex-wrap gap-1.5 z-10\">\r\n            {hasActiveGroup && <Badge variant=\"group\">GRUP BELI</Badge>}\r\n            {product.status === 'active' && !hasActiveGroup && (\r\n              <Badge variant=\"hot\">READY STOCK</Badge>\r\n            )}\r\n            {product.published_at &&\r\n              new Date(product.published_at) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) && (\r\n                <Badge variant=\"new\">BARU</Badge>\r\n              )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Product Info */}\r\n        <CardContent className=\"space-y-3\">\r\n          {/* Product Name */}\r\n          <h3 className=\"font-semibold text-gray-900 line-clamp-2 min-h-[3rem] group-hover:text-red-600 transition-colors\">\r\n            {product.name}\r\n          </h3>\r\n\r\n          {/* Factory Name */}\r\n          {product.factory && (\r\n            <p className=\"text-xs text-gray-500 truncate\">\r\n              {product.factory.factory_name}\r\n            </p>\r\n          )}\r\n\r\n          {/* Group Buying Section */}\r\n          {hasActiveGroup && activeSession && (\r\n            <div className=\"space-y-2 p-3 bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl border border-purple-100\">\r\n              {/* Progress Bar */}\r\n              <GroupProgress\r\n                current={activeSession.current_quantity || 0}\r\n                target={activeSession.target_moq}\r\n                showLabel={true}\r\n              />\r\n\r\n              {/* Countdown Timer */}\r\n              <Countdown endTime={activeSession.end_time} />\r\n            </div>\r\n          )}\r\n\r\n          {/* Price */}\r\n          <div className=\"pt-2\">\r\n            <PriceDisplay\r\n              price={hasActiveGroup ? activeSession!.group_price : product.base_price}\r\n              originalPrice={product.cost_price}\r\n              size=\"md\"\r\n            />\r\n            {hasActiveGroup && (\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                Harga normal: Rp {product.base_price.toLocaleString('id-ID')}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Social Proof */}\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {hasActiveGroup && activeSession && activeSession.current_quantity && (\r\n              <SocialProof\r\n                type=\"participants\"\r\n                count={activeSession.current_quantity}\r\n              />\r\n            )}\r\n            {product.total_reviews && product.total_reviews > 0 && (\r\n              <SocialProof type=\"reviews\" count={product.total_reviews} />\r\n            )}\r\n            {product.average_rating && (\r\n              <div className=\"inline-flex items-center gap-1 text-xs text-yellow-600\">\r\n                <svg className=\"w-4 h-4 fill-current\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                </svg>\r\n                <span className=\"font-semibold\">{product.average_rating.toFixed(1)}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* MOQ Info */}\r\n          {product.min_order_quantity > 1 && (\r\n            <div className=\"text-xs text-gray-600 bg-gray-50 px-2 py-1 rounded\">\r\n              MOQ: {product.min_order_quantity} pcs\r\n            </div>\r\n          )}\r\n\r\n          {/* CTA Buttons */}\r\n          <div className=\"pt-2 space-y-2\">\r\n            {hasActiveGroup && activeSession ? (\r\n              <GroupBuyButton\r\n                participantCount={activeSession.current_quantity}\r\n                onClick={handleJoinGroup}\r\n                fullWidth\r\n                size=\"md\"\r\n              >\r\n                Gabung Grup\r\n              </GroupBuyButton>\r\n            ) : (\r\n              <AddToCartButton\r\n                onClick={handleAddToCart}\r\n                isLoading={isAdding}\r\n                fullWidth\r\n                size=\"md\"\r\n              >\r\n                {isAdding ? 'Menambahkan...' : 'Tambah ke Keranjang'}\r\n              </AddToCartButton>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// COMPACT VARIANT - For lists/sidebars\r\n// ============================================================================\r\n\r\ninterface ProductCardCompactProps {\r\n  product: Product;\r\n  onClick?: () => void;\r\n}\r\n\r\n/**\r\n * ProductCardCompact - Horizontal layout for lists\r\n */\r\nexport const ProductCardCompact: React.FC<ProductCardCompactProps> = ({\r\n  product,\r\n  onClick,\r\n}) => {\r\n  const discountPercent = product.cost_price && product.cost_price > product.base_price\r\n    ? Math.round(((product.cost_price - product.base_price) / product.cost_price) * 100)\r\n    : 0;\r\n\r\n  return (\r\n    <Link href={`/products/${product.slug}`} onClick={onClick}>\r\n      <Card className=\"group cursor-pointer hover:shadow-lg transition-shadow\">\r\n        <div className=\"flex gap-3 p-3\">\r\n          {/* Image */}\r\n          <div className=\"relative w-20 h-20 flex-shrink-0 rounded-lg overflow-hidden bg-gray-100\">\r\n            <Image\r\n              src={product.primary_image_url || '/placeholder-product.jpg'}\r\n              alt={product.name}\r\n              fill\r\n              className=\"object-cover group-hover:scale-110 transition-transform duration-300\"\r\n              sizes=\"80px\"\r\n            />\r\n            {discountPercent > 0 && (\r\n              <div className=\"absolute top-1 right-1 bg-red-500 text-white text-xs font-bold px-1.5 py-0.5 rounded\">\r\n                -{discountPercent}%\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Info */}\r\n          <div className=\"flex-1 min-w-0\">\r\n            <h4 className=\"font-medium text-sm line-clamp-2 group-hover:text-red-600 transition-colors\">\r\n              {product.name}\r\n            </h4>\r\n            <div className=\"mt-1\">\r\n              <PriceDisplay price={product.base_price} size=\"sm\" />\r\n            </div>\r\n            {product.average_rating && (\r\n              <div className=\"flex items-center gap-1 mt-1 text-xs text-yellow-600\">\r\n                <svg className=\"w-3 h-3 fill-current\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                </svg>\r\n                <span>{product.average_rating.toFixed(1)}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// SKELETON LOADER\r\n// ============================================================================\r\n\r\n/**\r\n * ProductCardSkeleton - Loading placeholder\r\n */\r\nexport const ProductCardSkeleton: React.FC = () => {\r\n  return (\r\n    <Card className=\"overflow-hidden\">\r\n      <div className=\"aspect-square bg-gray-200 animate-pulse\" />\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"h-12 bg-gray-200 rounded animate-pulse\" />\r\n        <div className=\"h-8 bg-gray-200 rounded animate-pulse w-2/3\" />\r\n        <div className=\"h-10 bg-gray-200 rounded animate-pulse\" />\r\n        <div className=\"flex gap-2\">\r\n          <div className=\"h-6 bg-gray-200 rounded animate-pulse w-20\" />\r\n          <div className=\"h-6 bg-gray-200 rounded animate-pulse w-24\" />\r\n        </div>\r\n        <div className=\"h-11 bg-gray-200 rounded-xl animate-pulse\" />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// USAGE EXAMPLES\r\n// ============================================================================\r\n\r\n/**\r\n * Example 1: Basic product card\r\n * \r\n * <ProductCard product={product} />\r\n */\r\n\r\n/**\r\n * Example 2: Product card with custom handlers\r\n * \r\n * <ProductCard\r\n *   product={product}\r\n *   onAddToCart={(product) => {\r\n *     toast.success(`${product.name} ditambahkan ke keranjang!`);\r\n *   }}\r\n *   onJoinGroup={(product, session) => {\r\n *     router.push(`/group-buying/${session.id}`);\r\n *   }}\r\n * />\r\n */\r\n\r\n/**\r\n * Example 3: Grid of products\r\n * \r\n * <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n *   {products.map((product) => (\r\n *     <ProductCard key={product.id} product={product} />\r\n *   ))}\r\n * </div>\r\n */\r\n\r\n/**\r\n * Example 4: Loading state\r\n * \r\n * <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n *   {isLoading ? (\r\n *     Array.from({ length: 8 }).map((_, i) => (\r\n *       <ProductCardSkeleton key={i} />\r\n *     ))\r\n *   ) : (\r\n *     products.map((product) => (\r\n *       <ProductCard key={product.id} product={product} />\r\n *     ))\r\n *   )}\r\n * </div>\r\n */\r\n\r\n/**\r\n * Example 5: Compact list view\r\n * \r\n * <div className=\"space-y-3\">\r\n *   {products.map((product) => (\r\n *     <ProductCardCompact key={product.id} product={product} />\r\n *   ))}\r\n * </div>\r\n */"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1925, "column": 0}, "map": {"version":3,"sources":["file:///C:/ecommerce/ecommerceMVP/apps/customer-web/components/product/product-grid.tsx"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n// Update the import path if the alias is not configured or the file is elsewhere\r\nimport { getProducts } from '../../lib/api/products';\r\nimport type { ProductFilters, Product } from '@/types';\r\nimport { ProductCard, ProductCardSkeleton } from './product-card';\r\nimport { Button } from '@/components/ui/button';\r\n\r\n// ============================================================================\r\n// PRODUCT GRID PROPS\r\n// ============================================================================\r\n\r\ninterface ProductGridProps {\r\n  filters?: ProductFilters;\r\n  initialProducts?: Product[];\r\n  showGroupBuyingOnly?: boolean;\r\n  itemsPerPage?: number;\r\n  columns?: {\r\n    mobile?: number;\r\n    tablet?: number;\r\n    desktop?: number;\r\n  };\r\n  emptyMessage?: string;\r\n  showLoadMore?: boolean;\r\n}\r\n\r\n// ============================================================================\r\n// PRODUCT GRID COMPONENT\r\n// ============================================================================\r\n\r\n/**\r\n * ProductGrid - Responsive grid of products with React Query\r\n * \r\n * Features:\r\n * - Fetches products using React Query\r\n * - Responsive grid layout (2-4 columns)\r\n * - Loading skeletons\r\n * - Empty state\r\n * - Error handling\r\n * - Pagination with \"Load More\" button\r\n * - Optimistic updates\r\n */\r\nexport const ProductGrid: React.FC<ProductGridProps> = ({\r\n  filters = {},\r\n  initialProducts,\r\n  showGroupBuyingOnly = false,\r\n  itemsPerPage = 12,\r\n  columns = {\r\n    mobile: 2,\r\n    tablet: 3,\r\n    desktop: 4,\r\n  },\r\n  emptyMessage = 'Belum ada produk tersedia',\r\n  showLoadMore = true,\r\n}) => {\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  // Merge filters with pagination\r\n  const queryFilters: ProductFilters = {\r\n    ...filters,\r\n    has_active_group: showGroupBuyingOnly || filters.has_active_group,\r\n    page,\r\n    limit: itemsPerPage,\r\n  };\r\n\r\n  // Fetch products with React Query\r\n  const {\r\n    data,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n    isFetching,\r\n  } = useQuery({\r\n    queryKey: ['products', queryFilters],\r\n    queryFn: () => getProducts(queryFilters),\r\n    placeholderData: initialProducts ? {\r\n      success: true,\r\n      data: initialProducts,\r\n      pagination: {\r\n        page: 1,\r\n        limit: itemsPerPage,\r\n        total: initialProducts.length,\r\n        total_pages: 1,\r\n      },\r\n    } : undefined,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  });\r\n\r\n  const products = data?.data || [];\r\n  const pagination = data?.pagination;\r\n  const hasNextPage = pagination ? pagination.page < pagination.total_pages : false;\r\n\r\n  // Grid column classes\r\n  const gridCols: Record<number, string> = {\r\n    1: 'grid-cols-1',\r\n    2: 'grid-cols-2',\r\n    3: 'grid-cols-3',\r\n    4: 'grid-cols-4',\r\n    5: 'grid-cols-5',\r\n    6: 'grid-cols-6',\r\n  };\r\n\r\n  const gridClass = [\r\n    gridCols[columns.mobile || 2],\r\n    `md:${gridCols[columns.tablet || 3]}`,\r\n    `lg:${gridCols[columns.desktop || 4]}`,\r\n  ].join(' ');\r\n\r\n  // Handle load more\r\n  const handleLoadMore = () => {\r\n    setPage((prev) => prev + 1);\r\n  };\r\n\r\n  // Reset page when filters change\r\n  React.useEffect(() => {\r\n    setPage(1);\r\n  }, [JSON.stringify(filters)]);\r\n\r\n  // ============================================================================\r\n  // LOADING STATE\r\n  // ============================================================================\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`grid ${gridClass} gap-4 md:gap-6`}>\r\n        {Array.from({ length: itemsPerPage }).map((_, i) => (\r\n          <ProductCardSkeleton key={i} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ============================================================================\r\n  // ERROR STATE\r\n  // ============================================================================\r\n\r\n  if (isError) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center py-16 px-4\">\r\n        <div className=\"text-center max-w-md\">\r\n          {/* Error Icon */}\r\n          <div className=\"mx-auto w-16 h-16 mb-4 text-red-500\">\r\n            <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n            Gagal Memuat Produk\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            {(error as any)?.message || 'Terjadi kesalahan saat memuat produk. Silakan coba lagi.'}\r\n          </p>\r\n\r\n          <Button\r\n            onClick={() => window.location.reload()}\r\n            variant=\"primary\"\r\n            size=\"md\"\r\n          >\r\n            Muat Ulang\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ============================================================================\r\n  // EMPTY STATE\r\n  // ============================================================================\r\n\r\n  if (products.length === 0) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center py-16 px-4\">\r\n        <div className=\"text-center max-w-md\">\r\n          {/* Empty Icon */}\r\n          <div className=\"mx-auto w-20 h-20 mb-4 text-gray-300\">\r\n            <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\"\r\n              />\r\n            </svg>\r\n          </div>\r\n\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n            Produk Tidak Ditemukan\r\n          </h3>\r\n          <p className=\"text-gray-600\">\r\n            {emptyMessage}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ============================================================================\r\n  // SUCCESS STATE - SHOW PRODUCTS\r\n  // ============================================================================\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Product Grid */}\r\n      <div className={`grid ${gridClass} gap-4 md:gap-6`}>\r\n        {products.map((product) => (\r\n          <ProductCard\r\n            key={product.id}\r\n            product={product}\r\n            showGroupBuying={showGroupBuyingOnly}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Load More Button */}\r\n      {showLoadMore && hasNextPage && (\r\n        <div className=\"flex justify-center pt-4\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"lg\"\r\n            onClick={handleLoadMore}\r\n            isLoading={isFetching}\r\n            disabled={isFetching}\r\n          >\r\n            {isFetching ? 'Memuat...' : 'Muat Lebih Banyak'}\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pagination Info */}\r\n      {pagination && (\r\n        <div className=\"text-center text-sm text-gray-500\">\r\n          Menampilkan {products.length} dari {pagination.total} produk\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// FEATURED PRODUCTS SECTION\r\n// ============================================================================\r\n\r\ninterface FeaturedProductsProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n  limit?: number;\r\n}\r\n\r\n/**\r\n * FeaturedProducts - Section for homepage with title\r\n */\r\nexport const FeaturedProducts: React.FC<FeaturedProductsProps> = ({\r\n  title = 'Produk Pilihan',\r\n  subtitle = 'Produk terpopuler dengan harga terbaik',\r\n  limit = 8,\r\n}) => {\r\n  return (\r\n    <section className=\"py-8 md:py-12\">\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Section Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-2\">\r\n            {title}\r\n          </h2>\r\n          {subtitle && (\r\n            <p className=\"text-gray-600\">{subtitle}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Products Grid */}\r\n        <ProductGrid\r\n          itemsPerPage={limit}\r\n          showLoadMore={false}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// GROUP BUYING SECTION\r\n// ============================================================================\r\n\r\n/**\r\n * GroupBuyingSection - Special section for active group buying\r\n */\r\nexport const GroupBuyingSection: React.FC = () => {\r\n  return (\r\n    <section className=\"py-8 md:py-12 bg-gradient-to-br from-purple-50 to-pink-50\">\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Section Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"inline-flex items-center gap-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-2 rounded-full font-bold text-lg mb-4\">\r\n            <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\" />\r\n            </svg>\r\n            GRUP BELI AKTIF\r\n          </div>\r\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-2\">\r\n            Gabung Sekarang, Hemat Lebih Banyak!\r\n          </h2>\r\n          <p className=\"text-gray-600\">\r\n            Bergabunglah dengan grup pembelian untuk mendapatkan harga termurah\r\n          </p>\r\n        </div>\r\n\r\n        {/* Products Grid - Only show active group buying */}\r\n        <ProductGrid\r\n          showGroupBuyingOnly={true}\r\n          itemsPerPage={8}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// CATEGORY SECTION\r\n// ============================================================================\r\n\r\ninterface CategoryProductsProps {\r\n  categoryId: string;\r\n  categoryName: string;\r\n  limit?: number;\r\n}\r\n\r\n/**\r\n * CategoryProducts - Products filtered by category\r\n */\r\nexport const CategoryProducts: React.FC<CategoryProductsProps> = ({\r\n  categoryId,\r\n  categoryName,\r\n  limit = 8,\r\n}) => {\r\n  return (\r\n    <section className=\"py-8 md:py-12\">\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Section Header */}\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900\">\r\n            {categoryName}\r\n          </h2>\r\n          <a\r\n            href={`/categories/${categoryId}`}\r\n            className=\"text-red-600 hover:text-red-700 font-semibold flex items-center gap-1\"\r\n          >\r\n            Lihat Semua\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n            </svg>\r\n          </a>\r\n        </div>\r\n\r\n        {/* Products Grid */}\r\n        <ProductGrid\r\n          filters={{ category_id: categoryId }}\r\n          itemsPerPage={limit}\r\n          showLoadMore={false}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// ============================================================================\r\n// USAGE EXAMPLES\r\n// ============================================================================\r\n\r\n/**\r\n * Example 1: Basic product grid\r\n * \r\n * <ProductGrid />\r\n */\r\n\r\n/**\r\n * Example 2: Grid with filters\r\n * \r\n * <ProductGrid\r\n *   filters={{\r\n *     category_id: 'batik-tulis',\r\n *     min_price: 50000,\r\n *     max_price: 200000,\r\n *     sort_by: 'price_asc'\r\n *   }}\r\n * />\r\n */\r\n\r\n/**\r\n * Example 3: Only group buying products\r\n * \r\n * <ProductGrid showGroupBuyingOnly={true} />\r\n */\r\n\r\n/**\r\n * Example 4: Featured products section on homepage\r\n * \r\n * <FeaturedProducts\r\n *   title=\"Batik Terpopuler\"\r\n *   subtitle=\"Produk batik pilihan dengan kualitas terbaik\"\r\n *   limit={12}\r\n * />\r\n */\r\n\r\n/**\r\n * Example 5: Group buying section\r\n * \r\n * <GroupBuyingSection />\r\n */\r\n\r\n/**\r\n * Example 6: Category-specific products\r\n * \r\n * <CategoryProducts\r\n *   categoryId=\"batik-cap\"\r\n *   categoryName=\"Batik Cap\"\r\n *   limit={8}\r\n * />\r\n */\r\n\r\n/**\r\n * Example 7: Custom grid columns\r\n * \r\n * <ProductGrid\r\n *   columns={{\r\n *     mobile: 1,\r\n *     tablet: 2,\r\n *     desktop: 3\r\n *   }}\r\n * />\r\n */"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AACA,iFAAiF;AACjF;AAEA;AACA;;;AARA;;;;;;AA4CO,MAAM,cAA0C;QAAC,EACtD,UAAU,CAAC,CAAC,EACZ,eAAe,EACf,sBAAsB,KAAK,EAC3B,eAAe,EAAE,EACjB,UAAU;QACR,QAAQ;QACR,QAAQ;QACR,SAAS;IACX,CAAC,EACD,eAAe,2BAA2B,EAC1C,eAAe,IAAI,EACpB;;IACC,MAAM,CAAC,MAAM,QAAQ,GAAG,wSAAc,CAAC;IAEvC,gCAAgC;IAChC,MAAM,eAA+B;QACnC,GAAG,OAAO;QACV,kBAAkB,uBAAuB,QAAQ,gBAAgB;QACjE;QACA,OAAO;IACT;IAEA,kCAAkC;IAClC,MAAM,EACJ,IAAI,EACJ,SAAS,EACT,OAAO,EACP,KAAK,EACL,UAAU,EACX,GAAG,IAAA,0RAAQ,EAAC;QACX,UAAU;YAAC;YAAY;SAAa;QACpC,OAAO;oCAAE,IAAM,IAAA,mKAAW,EAAC;;QAC3B,iBAAiB,kBAAkB;YACjC,SAAS;YACT,MAAM;YACN,YAAY;gBACV,MAAM;gBACN,OAAO;gBACP,OAAO,gBAAgB,MAAM;gBAC7B,aAAa;YACf;QACF,IAAI;QACJ,WAAW,IAAI,KAAK;IACtB;IAEA,MAAM,WAAW,CAAA,iBAAA,2BAAA,KAAM,IAAI,KAAI,EAAE;IACjC,MAAM,aAAa,iBAAA,2BAAA,KAAM,UAAU;IACnC,MAAM,cAAc,aAAa,WAAW,IAAI,GAAG,WAAW,WAAW,GAAG;IAE5E,sBAAsB;IACtB,MAAM,WAAmC;QACvC,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;IACL;IAEA,MAAM,YAAY;QAChB,QAAQ,CAAC,QAAQ,MAAM,IAAI,EAAE;QAC5B,MAAmC,OAA9B,QAAQ,CAAC,QAAQ,MAAM,IAAI,EAAE;QAClC,MAAoC,OAA/B,QAAQ,CAAC,QAAQ,OAAO,IAAI,EAAE;KACrC,CAAC,IAAI,CAAC;IAEP,mBAAmB;IACnB,MAAM,iBAAiB;QACrB,QAAQ,CAAC,OAAS,OAAO;IAC3B;IAEA,iCAAiC;IACjC,ySAAe;iCAAC;YACd,QAAQ;QACV;gCAAG;QAAC,KAAK,SAAS,CAAC;KAAS;IAE5B,+EAA+E;IAC/E,gBAAgB;IAChB,+EAA+E;IAE/E,IAAI,WAAW;QACb,qBACE,4TAAC;YAAI,WAAW,AAAC,QAAiB,OAAV,WAAU;sBAC/B,MAAM,IAAI,CAAC;gBAAE,QAAQ;YAAa,GAAG,GAAG,CAAC,CAAC,GAAG,kBAC5C,4TAAC,8LAAmB,MAAM;;;;;;;;;;IAIlC;IAEA,+EAA+E;IAC/E,cAAc;IACd,+EAA+E;IAE/E,IAAI,SAAS;YAoBF;QAnBT,qBACE,4TAAC;YAAI,WAAU;sBACb,cAAA,4TAAC;gBAAI,WAAU;;kCAEb,4TAAC;wBAAI,WAAU;kCACb,cAAA,4TAAC;4BAAI,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCAC7C,cAAA,4TAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;kCAKR,4TAAC;wBAAG,WAAU;kCAA2C;;;;;;kCAGzD,4TAAC;wBAAE,WAAU;kCACV,EAAA,QAAC,mBAAD,4BAAA,MAAgB,OAAO,KAAI;;;;;;kCAG9B,4TAAC,mKAAM;wBACL,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;wBACrC,SAAQ;wBACR,MAAK;kCACN;;;;;;;;;;;;;;;;;IAMT;IAEA,+EAA+E;IAC/E,cAAc;IACd,+EAA+E;IAE/E,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBACE,4TAAC;YAAI,WAAU;sBACb,cAAA,4TAAC;gBAAI,WAAU;;kCAEb,4TAAC;wBAAI,WAAU;kCACb,cAAA,4TAAC;4BAAI,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCAC7C,cAAA,4TAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;kCAKR,4TAAC;wBAAG,WAAU;kCAA2C;;;;;;kCAGzD,4TAAC;wBAAE,WAAU;kCACV;;;;;;;;;;;;;;;;;IAKX;IAEA,+EAA+E;IAC/E,gCAAgC;IAChC,+EAA+E;IAE/E,qBACE,4TAAC;QAAI,WAAU;;0BAEb,4TAAC;gBAAI,WAAW,AAAC,QAAiB,OAAV,WAAU;0BAC/B,SAAS,GAAG,CAAC,CAAC,wBACb,4TAAC,sLAAW;wBAEV,SAAS;wBACT,iBAAiB;uBAFZ,QAAQ,EAAE;;;;;;;;;;YAQpB,gBAAgB,6BACf,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC,mKAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,SAAS;oBACT,WAAW;oBACX,UAAU;8BAET,aAAa,cAAc;;;;;;;;;;;YAMjC,4BACC,4TAAC;gBAAI,WAAU;;oBAAoC;oBACpC,SAAS,MAAM;oBAAC;oBAAO,WAAW,KAAK;oBAAC;;;;;;;;;;;;;AAK/D;GAxMa;;QA8BP,0RAAQ;;;KA9BD;AAuNN,MAAM,mBAAoD;QAAC,EAChE,QAAQ,gBAAgB,EACxB,WAAW,wCAAwC,EACnD,QAAQ,CAAC,EACV;IACC,qBACE,4TAAC;QAAQ,WAAU;kBACjB,cAAA,4TAAC;YAAI,WAAU;;8BAEb,4TAAC;oBAAI,WAAU;;sCACb,4TAAC;4BAAG,WAAU;sCACX;;;;;;wBAEF,0BACC,4TAAC;4BAAE,WAAU;sCAAiB;;;;;;;;;;;;8BAKlC,4TAAC;oBACC,cAAc;oBACd,cAAc;;;;;;;;;;;;;;;;;AAKxB;MA1Ba;AAmCN,MAAM,qBAA+B;IAC1C,qBACE,4TAAC;QAAQ,WAAU;kBACjB,cAAA,4TAAC;YAAI,WAAU;;8BAEb,4TAAC;oBAAI,WAAU;;sCACb,4TAAC;4BAAI,WAAU;;8CACb,4TAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAe,SAAQ;8CACnD,cAAA,4TAAC;wCAAK,GAAE;;;;;;;;;;;gCACJ;;;;;;;sCAGR,4TAAC;4BAAG,WAAU;sCAAoD;;;;;;sCAGlE,4TAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAM/B,4TAAC;oBACC,qBAAqB;oBACrB,cAAc;;;;;;;;;;;;;;;;;AAKxB;MA5Ba;AA2CN,MAAM,mBAAoD;QAAC,EAChE,UAAU,EACV,YAAY,EACZ,QAAQ,CAAC,EACV;IACC,qBACE,4TAAC;QAAQ,WAAU;kBACjB,cAAA,4TAAC;YAAI,WAAU;;8BAEb,4TAAC;oBAAI,WAAU;;sCACb,4TAAC;4BAAG,WAAU;sCACX;;;;;;sCAEH,4TAAC;4BACC,MAAM,AAAC,eAAyB,OAAX;4BACrB,WAAU;;gCACX;8CAEC,4TAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,4TAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;8BAM3E,4TAAC;oBACC,SAAS;wBAAE,aAAa;oBAAW;oBACnC,cAAc;oBACd,cAAc;;;;;;;;;;;;;;;;;AAKxB,GAEA,+EAA+E;CAC/E,iBAAiB;CACjB,+EAA+E;CAE/E;;;;CAIC,IAED;;;;;;;;;;;CAWC,IAED;;;;CAIC,IAED;;;;;;;;CAQC,IAED;;;;CAIC,IAED;;;;;;;;CAQC,IAED;;;;;;;;;;CAUC;MApGY","debugId":null}}]
}